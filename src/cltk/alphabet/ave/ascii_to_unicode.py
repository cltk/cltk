"""
An ASCII system of transliteration for Avestan does not seem to have
been established yet.

TODO: Add tests
TODO: Propose puctuation scheme

"""

import re

__author__ = ["Caio Geraldes <caio.geraldes@usp.br"]


ASCII_TO_AVESTAN_SCRIPT = [
    # Complex
    (r"a'",         "\U00010B02"),  # ê¨Ç  AVESTAN LETTER AO
    (r"A'",         "\U00010B03"),  # ê¨É  AVESTAN LETTER AAO
    (r"a~",         "\U00010B04"),  # ê¨Ñ  AVESTAN LETTER AN
    (r"A~",         "\U00010B05"),  # ê¨Ö  AVESTAN LETTER AAN
    (r"a\.",        "\U00010B06"),  # ê¨Ü  AVESTAN LETTER AE
    (r"A\.",        "\U00010B07"),  # ê¨á  AVESTAN LETTER AEE
    (r"x'",         "\U00010B12"),  # ê¨í AVESTAN LETTER XYE
    (r"xv",         "\U00010B13"),  # ê¨ì AVESTAN LETTER XVE
    (r"th",         "\U00010B1A"),  # ê¨ö AVESTAN LETTER THE
    (r"dh",         "\U00010B1C"),  # ê¨ú AVESTAN LETTER DHE
    (r"bh",         "\U00010B21"),  # ê¨° AVESTAN LETTER BHE
    (r"ngv",        "\U00010B24"),  # ê¨§ AVESTAN LETTER NGVE
    (r"ng'",        "\U00010B23"),  # ê¨£ AVESTAN LETTER NGYE
    (r"ng",         "\U00010B22"),  # ê¨¢ AVESTAN LETTER NGE
    (r"n'",         "\U00010B26"),  # ê¨¶ AVESTAN LETTER NYE
    (r"gh",         "\U00010B16"),  # ê¨ñ AVESTAN LETTER GHE
    (r"sh'",        "\U00010B33"),  # ê¨≥ AVESTAN LETTER SHYE
    (r"sh",         "\U00010B31"),  # ê¨± AVESTAN LETTER SHE
    (r"zh",         "\U00010B32"),  # ê¨≤ AVESTAN LETTER ZHE
    (r"Sh",         "\U00010B34"),  # ê¨¥ AVESTAN LETTER SSHE
    (r"g'",         "\U00010B15"),  # ê¨ï AVESTAN LETTER GGE

    (r"a",          "\U00010B00"),  # ê¨Ä  AVESTAN LETTER A
    (r"A",          "\U00010B01"),  # ê¨Å  AVESTAN LETTER AA
    (r"e",          "\U00010B08"),  # ê¨à  AVESTAN LETTER E
    (r"E",          "\U00010B09"),  # ê¨â  AVESTAN LETTER EE
    (r"o",          "\U00010B0A"),  # ê¨ä  AVESTAN LETTER O
    (r"O",          "\U00010B0B"),  # ê¨ã  AVESTAN LETTER OO
    (r"i",          "\U00010B0C"),  # ê¨å  AVESTAN LETTER I
    (r"I",          "\U00010B0D"),  # ê¨ç  AVESTAN LETTER II
    (r"u",          "\U00010B0E"),  # ê¨é  AVESTAN LETTER U
    (r"U",          "\U00010B0F"),  # ê¨è  AVESTAN LETTER UU
    (r"k",          "\U00010B10"),  # ê¨ê AVESTAN LETTER KE
    (r"x",          "\U00010B11"),  # ê¨ë AVESTAN LETTER XE
    (r"g",          "\U00010B14"),  # ê¨î AVESTAN LETTER GE
    (r"G",          "\U00010B15"),  # ê¨ï AVESTAN LETTER GGE
    (r"c",          "\U00010B17"),  # ê¨ó AVESTAN LETTER CE
    (r"j",          "\U00010B18"),  # ê¨ò AVESTAN LETTER JE
    (r"t",          "\U00010B19"),  # ê¨ô AVESTAN LETTER TE
    (r"d",          "\U00010B1B"),  # ê¨õ AVESTAN LETTER DE
    (r"T",          "\U00010B1D"),  # ê¨ù AVESTAN LETTER TTE
    (r"p",          "\U00010B1E"),  # ê¨û AVESTAN LETTER PE
    (r"f",          "\U00010B1F"),  # ê¨ü AVESTAN LETTER FE
    (r"b",          "\U00010B20"),  # ê¨† AVESTAN LETTER BE
    (r"n",          "\U00010B25"),  # ê¨• AVESTAN LETTER NE
    (r"N",          "\U00010B27"),  # ê¨ß AVESTAN LETTER NNE
    (r"m",          "\U00010B28"),  # ê¨® AVESTAN LETTER ME
    (r"M",          "\U00010B29"),  # ê¨© AVESTAN LETTER HME
    (r"Y",          "\U00010B2A"),  # ê¨™ AVESTAN LETTER YYE
    (r"y",          "\U00010B2B"),  # ê¨´ AVESTAN LETTER YE
    (r"v",          "\U00010B2C"),  # ê¨¨ AVESTAN LETTER VE
    (r"r",          "\U00010B2D"),  # ê¨≠ AVESTAN LETTER RE
    (r"l",          "\U00010B2E"),  # ê¨Æ AVESTAN LETTER LE
    (r"s",          "\U00010B2F"),  # ê¨Ø AVESTAN LETTER SE
    (r"z",          "\U00010B30"),  # ê¨∞ AVESTAN LETTER ZE
    (r"h",          "\U00010B35"),  # ê¨µ AVESTAN LETTER HE
    # (r"<++>",       "\U00010B39"), # ê¨π AVESTAN ABBREVIATION MARK
    # (r"<++>",       "\U00010B3A"), # ê¨∫ TINY TWO DOTS OVER ONE DOT PUNCTUATION
    # (r"<++>",       "\U00010B3B"), # ê¨ª SMALL TWO DOTS OVER ONE DOT PUNCTUATION
    # (r"<++>",       "\U00010B3C"), # ê¨º LARGE TWO DOTS OVER ONE DOT PUNCTUATION
    # (r"<++>",       "\U00010B3D"), # ê¨Ω LARGE ONE DOT OVER TWO DOTS PUNCTUATION
    # (r"<++>",       "\U00010B3E"), # ê¨æ LARGE TWO RINGS OVER ONE RING PUNCTUATION
    # (r"<++>",       "\U00010B3F")  # ê¨ø LARGE ONE RING OVER TWO RINGS PUNCTUATION
]


ASCII_TO_AVESTAN_HOFFMAN = [
    # Complex
    (r"a'",         "√•"),  # ê¨Ç  AVESTAN LETTER AOV
    (r"A'",         "ƒÅÃä"),  # ê¨É  AVESTAN LETTER AAO
    (r"a~",         "ƒÖ"),  # ê¨Ñ  AVESTAN LETTER AN
    (r"A~",         "ƒÖÃá"),  # ê¨Ö  AVESTAN LETTER AAN
    (r"a\.",        "…ô"),  # ê¨Ü  AVESTAN LETTER AE
    (r"A\.",        "…ôÃÑ"),  # ê¨á  AVESTAN LETTER AEE
    (r"x'",         "xÃÅ"),  # ê¨í AVESTAN LETTER XYE
    (r"xv",         "x·µõ"),  # ê¨ì AVESTAN LETTER XVE
    (r"th",         "œë"),  # ê¨ö AVESTAN LETTER THE
    (r"dh",         "Œ¥"),  # ê¨ú AVESTAN LETTER DHE
    (r"bh",         "Œ≤"),  # ê¨° AVESTAN LETTER BHE
    (r"ngv",        "≈ã·µõ"),  # ê¨§ AVESTAN LETTER NGVE
    (r"ng'",        "≈ãÃÅ"),  # ê¨£ AVESTAN LETTER NGYE
    (r"ng",         "≈ã"),  # ê¨¢ AVESTAN LETTER NGE
    (r"n'",         "≈Ñ"),  # ê¨¶ AVESTAN LETTER NYE
    (r"gh",         "Œ≥"),  # ê¨ñ AVESTAN LETTER GHE
    (r"sh'",        "≈°ÃÅ"),  # ê¨≥ AVESTAN LETTER SHYE
    (r"sh",         "≈°"),  # ê¨± AVESTAN LETTER SHE
    (r"zh",         "≈æ"),  # ê¨≤ AVESTAN LETTER ZHE
    (r"Sh",         "·π£Ãå"),  # ê¨¥ AVESTAN LETTER SSHE
    (r"g'",         "ƒ°"),  # ê¨ï AVESTAN LETTER GGE

    (r"A",          "ƒÅ"),  # ê¨Å  AVESTAN LETTER AA
    (r"E",          "ƒì"),  # ê¨â  AVESTAN LETTER EE
    (r"O",          "≈ç"),  # ê¨ã  AVESTAN LETTER OO
    (r"I",          "ƒ´"),  # ê¨ç  AVESTAN LETTER II
    (r"U",          "≈´"),  # ê¨è  AVESTAN LETTER UU
    (r"G",          "ƒ°"),  # ê¨ï AVESTAN LETTER GGE
    (r"T",          "tÃ∞"),  # ê¨ù AVESTAN LETTER TTE
    (r"N",          "·πá"),  # ê¨ß AVESTAN LETTER NNE
    (r"M",          "mÃ®"),  # ê¨© AVESTAN LETTER HME
    (r"Y",          "·∫è"),  # ê¨™ AVESTAN LETTER YYE
]


class AsciiConverter:
    """
    Replace ASCII notation with an Unicode transliteration scheme for
    Avestan.

    Attributes
    ----------
    scheme : str
        String with the name of the transliteration scheme to be used.

    script_set: list
        List with correspondences to be used in the conversion method.

    Methods
    -------
    __init__(self, scheme)
        Constructs the converter with the transliteration scheme.

        Parameters
        -----------
            scheme : str
                String with the name of the transliteration scheme to be used.
                Options: "script" and "roman-hoffman"

    converter (self, ascii_string)
        Converts a ascii string to the converter's scheme.

        Parameters
        ----------
            ascii_string : str
                String with the text to be converted in ASCII notation.

    >>> from cltk.alphabet.ave.ascii_to_unicode import AsciiConverter
    >>> ascii_replace = AsciiConverter()
    >>> string = "ahiiA. yAsA na.manghA. ustAnazastO."
    >>> ascii_replace.converter(string)
    """

    def __init__(self, scheme="script"):
        if scheme == "roman-hoffman":
            self.scheme = "roman-hoffman"
            self.script_set = ASCII_TO_AVESTAN_HOFFMAN
        else:
            self.scheme = "script"
            self.script_set = ASCII_TO_AVESTAN_SCRIPT

    def converter(self, ascii_text):
        output = ascii_text

        for pair in self.script_set:
            output = re.sub(pair[0], pair[1], output)
        return output


if __name__ == "__main__":
    ascii_replace = AsciiConverter()
    string = "ahiiA. yAsA na.manghA. ustAnazastO."
    print(ascii_replace.converter(string))
    ascii_replace = AsciiConverter("roman-hoffman")
    print(ascii_replace.converter(string))
